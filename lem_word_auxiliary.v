(* Generated by Lem from word.lem. *)

Require Import Arith.
Require Import Bool.
Require Import List.
Require Import String.
Require Import Program.Wf.

Open Scope nat_scope.
Open Scope string_scope.



Lemma boolListFrombitSeq_0 :( (list_equal_by Bool.eqb (boolListFrombitSeq( 5%nat) (BitSeq None false [true;false;true])) [true;false;true;false;false]): Prop) .
Lemma boolListFrombitSeq_1 :( (list_equal_by Bool.eqb (boolListFrombitSeq( 5%nat) (BitSeq None true [true;false;true])) [true;false;true;true;true]): Prop) .
Lemma boolListFrombitSeq_2 :( (list_equal_by Bool.eqb (boolListFrombitSeq( 2%nat) (BitSeq None true [true;false;true])) [true;false]): Prop) .

Lemma boolListFrombitSeq_len :(forall n  bs,( ( beq_nat(List.length (boolListFrombitSeq n bs)) n) : Prop): Prop) .

Lemma bitSeqFromBoolList_0 :( (maybeEqualBy classical_boolean_equivalence (bitSeqFromBoolList []) None): Prop) .
Lemma bitSeqFromBoolList_1 :( (maybeEqualBy classical_boolean_equivalence (bitSeqFromBoolList [true;false;false]) (Some (BitSeq (Some( 3%nat)) false [true;false]))): Prop) .
Lemma bitSeqFromBoolList_2 :( (maybeEqualBy classical_boolean_equivalence (bitSeqFromBoolList [true;false;true]) (Some (BitSeq (Some( 3%nat)) true [true;false]))): Prop) .

Lemma bitSeqFromBoolList_nothing :(forall bl,( ( Bool.eqb(isNothing (bitSeqFromBoolList bl)) (lem_list.null bl)) : Prop): Prop) .

Lemma cleanBitSeq_0:( classical_boolean_equivalence (cleanBitSeq (BitSeq None false [true;false;true;false;false])) (BitSeq None false [true;false;true]): Prop) .
Lemma cleanBitSeq_1:( classical_boolean_equivalence (cleanBitSeq (BitSeq None true [true;false;true;false;false])) (BitSeq None true [true;false;true;false;false]): Prop) .
Lemma cleanBitSeq_2:( classical_boolean_equivalence (cleanBitSeq (BitSeq (Some( 4%nat)) true [true;false;true;false;false])) (BitSeq (Some( 4%nat)) true [true;false]): Prop) .

Lemma resizeBitSeq_0:( ( classical_boolean_equivalence(resizeBitSeq None (BitSeq (Some( 5%nat)) true [false;false])) (BitSeq None true [false;false])): Prop) .
Lemma resizeBitSeq_1:( ( classical_boolean_equivalence(resizeBitSeq (Some( 3%nat)) (BitSeq None true [false;true;false;false])) (BitSeq (Some( 3%nat)) false [false;true])): Prop) .
Lemma resizeBitSeq_2:( ( classical_boolean_equivalence(resizeBitSeq (Some( 3%nat)) (BitSeq None false [false;true;true;false])) (BitSeq (Some( 3%nat)) true [false])): Prop) .
Lemma resizeBitSeq_3:( ( classical_boolean_equivalence(resizeBitSeq (Some( 3%nat)) (BitSeq (Some( 10%nat)) false [false;true;true;false])) (BitSeq (Some( 3%nat)) true [false])): Prop) . 
Lemma resizeBitSeq_4:( ( classical_boolean_equivalence(resizeBitSeq (Some( 10%nat)) (BitSeq (Some( 3%nat)) false [false;true;true;false])) (BitSeq (Some( 10%nat)) false [false;true])): Prop) .

Lemma bitSeqNot_0:( classical_boolean_equivalence (bitSeqNot (BitSeq (Some( 2%nat)) true [false;true])) (BitSeq (Some( 2%nat)) false [true;false]): Prop) .
LemmabitSeqBinopAux_def_lemma:((forallbinop bl1 bl2 s1 s2,((list_equal_by Bool.eqb
  match ( (bl1, bl2)) with 
    | ([],  []) => []
    | (b1 :: bl1',  []) => (binop b1 s2) :: bitSeqBinopAux binop s1 bl1' s2 []
    | ([],  b2 :: bl2') => (binop s1 b2) :: bitSeqBinopAux binop s1 []   s2 bl2'
    | (b1 :: bl1',  b2 :: bl2') => (binop b1 b2) :: bitSeqBinopAux binop s1 bl1' s2 bl2'
  end (bitSeqBinopAux binop s1 bl1 s2 bl2)) : Prop)): Prop) .

Lemma integerFromBoolList_0:( Z.eqb (integerFromBoolList (false, [false;true;false]))((Z.pred (Z.pos (P_of_succ_nat 2%nat)))): Prop) .
Lemma integerFromBoolList_1:( Z.eqb (integerFromBoolList (false, [false;true;false;true]))((Z.pred (Z.pos (P_of_succ_nat 10%nat)))): Prop) .
Lemma integerFromBoolList_2:( Z.eqb (integerFromBoolList (true,  [false;true;false;true])) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 6%nat)))))): Prop) .
Lemma integerFromBoolList_3:( Z.eqb (integerFromBoolList (true,  [false;true])) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 2%nat)))))): Prop) .
Lemma integerFromBoolList_4:( Z.eqb (integerFromBoolList (true,  [true;false])) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 3%nat)))))): Prop) .

LemmaboolListFromNatural_def_lemma:((forallremainder acc,((list_equal_by Bool.eqb
 (if ( nat_gtb remainder( 0%nat)) then 
   (boolListFromNatural (( beq_nat( Coq.Numbers.Natural.Peano.NPeano.modulo remainder( 2%nat))( 1%nat)) :: acc) 
      ( Coq.Numbers.Natural.Peano.NPeano.div remainder( 2%nat)))
 else
   List.rev acc) (boolListFromNatural acc (remainder : nat ))) : Prop)): Prop) .

Lemma boolListFromInteger_0:( ((tuple_equal_by Bool.eqb (list_equal_by Bool.eqb) (boolListFromInteger((Z.pred (Z.pos (P_of_succ_nat 2%nat))))) (false, [false;true]))): Prop) .
Lemma boolListFromInteger_1:( ((tuple_equal_by Bool.eqb (list_equal_by Bool.eqb) (boolListFromInteger((Z.pred (Z.pos (P_of_succ_nat 10%nat))))) (false, [false;true;false;true]))): Prop) .
Lemma boolListFromInteger_2:( ((tuple_equal_by Bool.eqb (list_equal_by Bool.eqb) (boolListFromInteger ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 6%nat))))))) (true, [false;true;false]))): Prop) . 
Lemma boolListFromInteger_3:( ((tuple_equal_by Bool.eqb (list_equal_by Bool.eqb) (boolListFromInteger ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 2%nat))))))) (true, [false]))): Prop) .
Lemma boolListFromInteger_4:( ((tuple_equal_by Bool.eqb (list_equal_by Bool.eqb) (boolListFromInteger ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 3%nat))))))) (true, [true;false]))): Prop) .

Lemma boolListFromInteger_inverse_1:( (forall i,( Z.eqb (integerFromBoolList (boolListFromInteger i)) i : Prop)): Prop) .
Lemma boolListFromInteger_inverse_2:( (forall s  bl  i,( ((tuple_equal_by Bool.eqb (list_equal_by Bool.eqb) (boolListFromInteger (integerFromBoolList (s, bl))) (s, List.rev (dropWhile (Bool.eqb s) (List.rev bl))))) : Prop)): Prop) .

Lemma bitSeqFromInteger_0:( ( classical_boolean_equivalence(bitSeqFromInteger None((Z.pred (Z.pos (P_of_succ_nat 5%nat))))) (BitSeq None false [true;false;true])): Prop) .
Lemma bitSeqFromInteger_1:( ( classical_boolean_equivalence(bitSeqFromInteger (Some( 2%nat))((Z.pred (Z.pos (P_of_succ_nat 5%nat))))) (BitSeq (Some( 2%nat)) false [true])): Prop) .
Lemma bitSeqFromInteger_2:( ( classical_boolean_equivalence(bitSeqFromInteger None ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 5%nat))))))) (BitSeq None true [true;true;false])): Prop) .
Lemma bitSeqFromInteger_3:( ( classical_boolean_equivalence(bitSeqFromInteger (Some( 3%nat)) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 5%nat))))))) (BitSeq (Some( 3%nat)) false [true;true])): Prop) .
Lemma bitSeqFromInteger_4:( ( classical_boolean_equivalence(bitSeqFromInteger (Some( 2%nat)) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 5%nat))))))) (BitSeq (Some( 2%nat)) true [])): Prop) .
Lemma bitSeqFromInteger_5:( ( classical_boolean_equivalence(bitSeqFromInteger (Some( 5%nat)) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 5%nat))))))) (BitSeq (Some( 5%nat)) true [true;true;false])): Prop) .


Lemma integerFromBitSeq_0:( ( Z.eqb(integerFromBitSeq (BitSeq None false [true;false;true]))((Z.pred (Z.pos (P_of_succ_nat 5%nat))))): Prop) .
Lemma integerFromBitSeq_1:( ( Z.eqb(integerFromBitSeq (BitSeq (Some( 2%nat)) false [true]))((Z.pred (Z.pos (P_of_succ_nat 1%nat))))): Prop) .
Lemma integerFromBitSeq_2:( ( Z.eqb(integerFromBitSeq (BitSeq None true [true;true;false])) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 5%nat))))))): Prop) .
Lemma integerFromBitSeq_3:( ( Z.eqb(integerFromBitSeq (BitSeq (Some( 2%nat)) true [true;true;false])) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 1%nat))))))): Prop) .

Lemma integerFromBitSeq_inv :( (forall i,( Z.eqb (integerFromBitSeq (bitSeqFromInteger None i)) i : Prop)): Prop) .
Lemma integerFromBitSeq_inv_0:( Z.eqb (integerFromBitSeq (bitSeqFromInteger None((Z.pred (Z.pos (P_of_succ_nat 10%nat))))))((Z.pred (Z.pos (P_of_succ_nat 10%nat)))): Prop) .
Lemma integerFromBitSeq_inv_1:( Z.eqb (integerFromBitSeq (bitSeqFromInteger None ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 1932%nat)))))))) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 1932%nat)))))): Prop) .
Lemma integerFromBitSeq_inv_2:( Z.eqb (integerFromBitSeq (bitSeqFromInteger None((Z.pred (Z.pos (P_of_succ_nat 343%nat))))))((Z.pred (Z.pos (P_of_succ_nat 343%nat)))): Prop) .

Lemma bitSequence_test1 :( ( classical_boolean_equivalence (bitSeqAdd(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 2%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 5%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 7%nat)))))): Prop) .
Lemma bitSequence_test2 :( ( classical_boolean_equivalence (bitSeqMinus(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 8%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 7%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 1%nat)))))): Prop) .
Lemma bitSequence_test3 :( ( classical_boolean_equivalence (bitSeqMinus(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 7%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 8%nat)))) :  bitSequence )) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 1%nat))))))): Prop) .
Lemma bitSequence_test4 :( ( classical_boolean_equivalence (bitSeqMult(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 7%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 8%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 56%nat)))))): Prop) .
Lemma bitSequence_test5 :( ( classical_boolean_equivalence (bitSeqPow(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 7%nat)))) :  bitSequence )( 2%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 49%nat)))))): Prop) .
Lemma bitSequence_test6 :( ( classical_boolean_equivalence (bitSeqDiv(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 4%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 2%nat)))))): Prop) .
Lemma bitSequence_test6a :( ( classical_boolean_equivalence (bitSeqDiv(bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat)))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 4%nat)))) :  bitSequence )) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 3%nat))))))): Prop) .
Lemma bitSequence_test7 :( ( classical_boolean_equivalence (bitSeqDiv(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 4%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 2%nat)))))): Prop) .
Lemma bitSequence_test7a :( ( classical_boolean_equivalence (bitSeqDiv(bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat)))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 4%nat)))) :  bitSequence )) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 3%nat))))))): Prop) .
Lemma bitSequence_test8 :( ( classical_boolean_equivalence (bitSeqMod(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 4%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 3%nat)))))): Prop) .
Lemma bitSequence_test8a :( ( classical_boolean_equivalence (bitSeqMod(bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat)))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 4%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 1%nat)))))): Prop) .
Lemma bitSequence_test9 :( ( bitSeqLess(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence )): Prop) .
Lemma bitSequence_test10 :( ( bitSeqLessEqual(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence )): Prop) .
Lemma bitSequence_test11 :( ( bitSeqLessEqual(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence )): Prop) .
Lemma bitSequence_test12 :( (negb ( bitSeqLess(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence ))): Prop) .
Lemma bitSequence_test13 :( ( bitSeqGreater(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat)))) :  bitSequence )): Prop) .
Lemma bitSequence_test14 :( ( bitSeqGreaterEqual(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat)))) :  bitSequence )): Prop) .
Lemma bitSequence_test15 :( ( bitSeqGreaterEqual(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence )): Prop) .
Lemma bitSequence_test16 :( (negb ( bitSeqGreater(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence ))): Prop) .
Lemma bitSequence_test17 :( ( classical_boolean_equivalence(bitSeqMin(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))))): Prop) .
Lemma bitSequence_test18 :( ( classical_boolean_equivalence(bitSeqMin(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 10%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 10%nat)))))): Prop) .
Lemma bitSequence_test19 :( ( classical_boolean_equivalence(bitSeqMin(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 10%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 10%nat)))))): Prop) .
Lemma bitSequence_test20 :( ( classical_boolean_equivalence(bitSeqMax(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))))): Prop) .
Lemma bitSequence_test21 :( ( classical_boolean_equivalence(bitSeqMax(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 10%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))))): Prop) .
Lemma bitSequence_test22 :( ( classical_boolean_equivalence(bitSeqMax(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 10%nat)))) :  bitSequence ))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))))): Prop) .
Lemma bitSequence_test23 :( ( classical_boolean_equivalence(bitSeqSucc(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 13%nat)))) :  bitSequence )): Prop) .
Lemma bitSequence_test24 :( ( classical_boolean_equivalence(bitSeqSucc(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 0%nat)))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 1%nat)))) :  bitSequence )): Prop) .
Lemma bitSequence_test25 :( ( classical_boolean_equivalence(bitSeqPred(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))))) (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 11%nat)))) :  bitSequence )): Prop) .
Lemma bitSequence_test26 :( ( classical_boolean_equivalence(bitSeqPred(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 0%nat)))))) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 1%nat)))) :  bitSequence ))): Prop) .

Lemma bitSequence_bittest1  :( ( classical_boolean_equivalence (bitSeqAnd(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 6%nat)))) :  bitSequence )(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 5%nat))))))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 4%nat)))))): Prop) .
Lemma bitSequence_bittest2  :( ( classical_boolean_equivalence (bitSeqOr(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 6%nat)))) :  bitSequence )(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 5%nat))))))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 7%nat)))))): Prop) .
Lemma bitSequence_bittest3  :( ( classical_boolean_equivalence (bitSeqXor(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 6%nat)))) :  bitSequence )(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 5%nat))))))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 3%nat)))))): Prop) .
Lemma bitSequence_bittest4  :( ( classical_boolean_equivalence (bitSeqAnd(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence )(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 9%nat))))))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 8%nat)))))): Prop) .
Lemma bitSequence_bittest5  :( ( classical_boolean_equivalence (bitSeqOr(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence )(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 9%nat))))))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 13%nat)))))): Prop) .
Lemma bitSequence_bittest6  :( ( classical_boolean_equivalence (bitSeqXor(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence )(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 9%nat))))))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))): Prop) .

Lemma bitSequence_bittest7  :( ( classical_boolean_equivalence(bitSeqNot (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 12%nat)))) :  bitSequence )) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 13%nat))))))): Prop) .
Lemma bitSequence_bittest8  :( ( classical_boolean_equivalence(bitSeqNot (bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 28%nat))))))): Prop) .
Lemma bitSequence_bittest9  :( ( classical_boolean_equivalence (bitSeqShiftLeft(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 0%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))))): Prop) .
Lemma bitSequence_bittest10 :( ( classical_boolean_equivalence (bitSeqShiftLeft(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 1%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 54%nat)))))): Prop) .
Lemma bitSequence_bittest11 :( ( classical_boolean_equivalence (bitSeqShiftLeft(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 2%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 108%nat)))))): Prop) .
Lemma bitSequence_bittest12 :( (  classical_boolean_equivalence (bitSeqShiftLeft(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 3%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 216%nat)))))): Prop) .
Lemma bitSequence_bittest13 :( ( classical_boolean_equivalence (bitSeqLogicalShiftRight(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 0%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))))): Prop) .
Lemma bitSequence_bittest14 :( ( classical_boolean_equivalence (bitSeqLogicalShiftRight(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 1%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 13%nat)))))): Prop) .
Lemma bitSequence_bittest15 :( ( classical_boolean_equivalence (bitSeqLogicalShiftRight(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 2%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 6%nat)))))): Prop) .
Lemma bitSequence_bittest16 :( ( classical_boolean_equivalence (bitSeqLogicalShiftRight(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 3%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 3%nat)))))): Prop) .
Lemma bitSequence_bittest17 :( ( classical_boolean_equivalence (bitSeqArithmeticShiftRight(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 0%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))))): Prop) .
Lemma bitSequence_bittest18 :( ( classical_boolean_equivalence (bitSeqArithmeticShiftRight(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 1%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 13%nat)))))): Prop) .
Lemma bitSequence_bittest19 :( ( classical_boolean_equivalence (bitSeqArithmeticShiftRight(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 2%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 6%nat)))))): Prop) .
Lemma bitSequence_bittest20 :( ( classical_boolean_equivalence (bitSeqArithmeticShiftRight(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence )( 3%nat))(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 3%nat)))))): Prop) .
Lemma bitSequence_bittest21 :( ( classical_boolean_equivalence (bitSeqLogicalShiftRight(bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence ))( 0%nat)) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat))))))): Prop) .
Lemma bitSequence_bittest22 :( ( classical_boolean_equivalence( bitSeqArithmeticShiftRight(bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence ))( 0%nat)) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat))))))): Prop) .
Lemma bitSequence_bittest23 :( ( classical_boolean_equivalence (bitSeqLogicalShiftRight(bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence ))( 1%nat)) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 14%nat))))))): Prop) .
Lemma bitSequence_bittest24 :( ( classical_boolean_equivalence (bitSeqArithmeticShiftRight(bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 27%nat)))) :  bitSequence ))( 1%nat)) (bitSeqNegate(bitSeqFromInteger None ((Z.pred (Z.pos (P_of_succ_nat 14%nat))))))): Prop) .


Lemma int32_bittest1  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 4%nat))))): Prop) .
Lemma int32_bittest2  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 7%nat))))): Prop) .
Lemma int32_bittest3  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma int32_bittest4  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 8%nat))))): Prop) .
Lemma int32_bittest5  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma int32_bittest6  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 5%nat))))): Prop) .

Lemma int32_bittest7  :( ( Z.eqb(((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 13%nat))))))): Prop) .
Lemma int32_bittest8  :( ( Z.eqb(((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 28%nat))))))): Prop) .
Lemma int32_bittest9  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma int32_bittest10 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 54%nat))))): Prop) .
Lemma int32_bittest11 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 108%nat))))): Prop) .
Lemma int32_bittest12 :( (  Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 216%nat))))): Prop) .
Lemma int32_bittest13 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma int32_bittest14 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma int32_bittest15 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 6%nat))))): Prop) .
Lemma int32_bittest16 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma int32_bittest17 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma int32_bittest18 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma int32_bittest19 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 6%nat))))): Prop) .
Lemma int32_bittest20 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma int32_bittest21 :( ( Z.eqb (((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))))))): Prop) .
Lemma int32_bittest22 :( ( Z.eqb( ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))))))): Prop) .
Lemma int32_bittest23 :( ( Z.eqb (((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))))((Z.pred (Z.pos (P_of_succ_nat 1073741817%nat))))): Prop) .
Lemma int32_bittest24 :( ( Z.eqb (((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 7%nat))))))): Prop) .


Lemma int64_bittest1  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 4%nat))))): Prop) .
Lemma int64_bittest2  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 7%nat))))): Prop) .
Lemma int64_bittest3  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma int64_bittest4  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 8%nat))))): Prop) .
Lemma int64_bittest5  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma int64_bittest6  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 5%nat))))): Prop) .

Lemma int64_bittest7  :( ( Z.eqb(((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 13%nat))))))): Prop) .
Lemma int64_bittest8  :( ( Z.eqb(((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 28%nat))))))): Prop) .
Lemma int64_bittest9  :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma int64_bittest10 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 54%nat))))): Prop) .
Lemma int64_bittest11 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 108%nat))))): Prop) .
Lemma int64_bittest12 :( (  Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 216%nat))))): Prop) .
Lemma int64_bittest13 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma int64_bittest14 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma int64_bittest15 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 6%nat))))): Prop) .
Lemma int64_bittest16 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma int64_bittest17 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma int64_bittest18 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma int64_bittest19 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 6%nat))))): Prop) .
Lemma int64_bittest20 :( ( Z.eqb (((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma int64_bittest21 :( ( Z.eqb (((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))))))): Prop) .
Lemma int64_bittest22 :( ( Z.eqb( ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))))))): Prop) .
Lemma int64_bittest23 :( ( Z.eqb (((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z ))))((Z.pred (Z.pos (P_of_succ_nat 1073741823%nat))))): Prop) .
Lemma int64_bittest24 :( ( Z.eqb (((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 7%nat))))))): Prop) .



Lemma integer_bittest1  :( ( Z.eqb (integerLand((Z.pred (Z.pos (P_of_succ_nat 6%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 4%nat))))): Prop) .
Lemma integer_bittest2  :( ( Z.eqb (integerLor((Z.pred (Z.pos (P_of_succ_nat 6%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 7%nat))))): Prop) .
Lemma integer_bittest3  :( ( Z.eqb (integerLxor((Z.pred (Z.pos (P_of_succ_nat 6%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma integer_bittest4  :( ( Z.eqb (integerLand((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 8%nat))))): Prop) .
Lemma integer_bittest5  :( ( Z.eqb (integerLor((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma integer_bittest6  :( ( Z.eqb (integerLxor((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 5%nat))))): Prop) .

Lemma integer_bittest7  :( ( Z.eqb(integerLnot ((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 13%nat))))))): Prop) .
Lemma integer_bittest8  :( ( Z.eqb(integerLnot ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 28%nat))))))): Prop) .
Lemma integer_bittest9  :( ( Z.eqb (integerLsl((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 0%nat))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma integer_bittest10 :( ( Z.eqb (integerLsl((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 1%nat))((Z.pred (Z.pos (P_of_succ_nat 54%nat))))): Prop) .
Lemma integer_bittest11 :( ( Z.eqb (integerLsl((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 2%nat))((Z.pred (Z.pos (P_of_succ_nat 108%nat))))): Prop) .
Lemma integer_bittest12 :( (  Z.eqb (integerLsl((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 3%nat))((Z.pred (Z.pos (P_of_succ_nat 216%nat))))): Prop) .
Lemma integer_bittest13 :( ( Z.eqb (integerAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 0%nat))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma integer_bittest14 :( ( Z.eqb (integerAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 1%nat))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma integer_bittest15 :( ( Z.eqb (integerAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 2%nat))((Z.pred (Z.pos (P_of_succ_nat 6%nat))))): Prop) .
Lemma integer_bittest16 :( ( Z.eqb (integerAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 3%nat))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma integer_bittest17 :( ( Z.eqb (integerAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 0%nat))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma integer_bittest18 :( ( Z.eqb (integerAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 1%nat))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma integer_bittest19 :( ( Z.eqb (integerAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 2%nat))((Z.pred (Z.pos (P_of_succ_nat 6%nat))))): Prop) .
Lemma integer_bittest20 :( ( Z.eqb (integerAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 3%nat))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma integer_bittest22 :( ( Z.eqb( integerAsr((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))( 0%nat)) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))))))): Prop) .
Lemma integer_bittest24 :( ( Z.eqb (integerAsr((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))( 2%nat)) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 7%nat))))))): Prop) .



Lemma int_bittest1  :( ( Z.eqb (intLand((Z.pred (Z.pos (P_of_succ_nat 6%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 4%nat))))): Prop) .
Lemma int_bittest2  :( ( Z.eqb (intLor((Z.pred (Z.pos (P_of_succ_nat 6%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 7%nat))))): Prop) .
Lemma int_bittest3  :( ( Z.eqb (intLxor((Z.pred (Z.pos (P_of_succ_nat 6%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 5%nat)))))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma int_bittest4  :( ( Z.eqb (intLand((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 8%nat))))): Prop) .
Lemma int_bittest5  :( ( Z.eqb (intLor((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma int_bittest6  :( ( Z.eqb (intLxor((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )((Z.pred (Z.pos (P_of_succ_nat 9%nat)))))((Z.pred (Z.pos (P_of_succ_nat 5%nat))))): Prop) .

Lemma int_bittest7  :( ( Z.eqb(intLnot ((Z.pred (Z.pos (P_of_succ_nat 12%nat))) :  Z )) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 13%nat))))))): Prop) .
Lemma int_bittest8  :( ( Z.eqb(intLnot ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 28%nat))))))): Prop) .
Lemma int_bittest9  :( ( Z.eqb (intLsl((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 0%nat))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma int_bittest10 :( ( Z.eqb (intLsl((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 1%nat))((Z.pred (Z.pos (P_of_succ_nat 54%nat))))): Prop) .
Lemma int_bittest11 :( ( Z.eqb (intLsl((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 2%nat))((Z.pred (Z.pos (P_of_succ_nat 108%nat))))): Prop) .
Lemma int_bittest12 :( (  Z.eqb (intLsl((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 3%nat))((Z.pred (Z.pos (P_of_succ_nat 216%nat))))): Prop) .
Lemma int_bittest17 :( ( Z.eqb (intAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 0%nat))((Z.pred (Z.pos (P_of_succ_nat 27%nat))))): Prop) .
Lemma int_bittest18 :( ( Z.eqb (intAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 1%nat))((Z.pred (Z.pos (P_of_succ_nat 13%nat))))): Prop) .
Lemma int_bittest19 :( ( Z.eqb (intAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 2%nat))((Z.pred (Z.pos (P_of_succ_nat 6%nat))))): Prop) .
Lemma int_bittest20 :( ( Z.eqb (intAsr((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )( 3%nat))((Z.pred (Z.pos (P_of_succ_nat 3%nat))))): Prop) .
Lemma int_bittest22 :( ( Z.eqb( intAsr((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))( 0%nat)) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))))))): Prop) .
Lemma int_bittest24 :( ( Z.eqb (intAsr((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 27%nat))) :  Z )))( 2%nat)) ((Coq.ZArith.BinInt.Z.sub Z0 ((Z.pred (Z.pos (P_of_succ_nat 7%nat))))))): Prop) .



Lemma natural_bittest1  :( ( beq_nat (naturalLand( 6%nat :  nat )( 5%nat))( 4%nat)): Prop) .
Lemma natural_bittest2  :( ( beq_nat (naturalLor( 6%nat :  nat )( 5%nat))( 7%nat)): Prop) .
Lemma natural_bittest3  :( ( beq_nat (naturalLxor( 6%nat :  nat )( 5%nat))( 3%nat)): Prop) .
Lemma natural_bittest4  :( ( beq_nat (naturalLand( 12%nat :  nat )( 9%nat))( 8%nat)): Prop) .
Lemma natural_bittest5  :( ( beq_nat (naturalLor( 12%nat :  nat )( 9%nat))( 13%nat)): Prop) .
Lemma natural_bittest6  :( ( beq_nat (naturalLxor( 12%nat :  nat )( 9%nat))( 5%nat)): Prop) .

Lemma natural_bittest9  :( ( beq_nat (naturalLsl( 27%nat :  nat )( 0%nat))( 27%nat)): Prop) .
Lemma natural_bittest10 :( ( beq_nat (naturalLsl( 27%nat :  nat )( 1%nat))( 54%nat)): Prop) .
Lemma natural_bittest11 :( ( beq_nat (naturalLsl( 27%nat :  nat )( 2%nat))( 108%nat)): Prop) .
Lemma natural_bittest12 :( (  beq_nat (naturalLsl( 27%nat :  nat )( 3%nat))( 216%nat)): Prop) .
Lemma natural_bittest13 :( ( beq_nat (naturalAsr( 27%nat :  nat )( 0%nat))( 27%nat)): Prop) .
Lemma natural_bittest14 :( ( beq_nat (naturalAsr( 27%nat :  nat )( 1%nat))( 13%nat)): Prop) .
Lemma natural_bittest15 :( ( beq_nat (naturalAsr( 27%nat :  nat )( 2%nat))( 6%nat)): Prop) .
Lemma natural_bittest16 :( ( beq_nat (naturalAsr( 27%nat :  nat )( 3%nat))( 3%nat)): Prop) .
Lemma natural_bittest17 :( ( beq_nat (naturalAsr( 27%nat :  nat )( 0%nat))( 27%nat)): Prop) .
Lemma natural_bittest18 :( ( beq_nat (naturalAsr( 27%nat :  nat )( 1%nat))( 13%nat)): Prop) .
Lemma natural_bittest19 :( ( beq_nat (naturalAsr( 27%nat :  nat )( 2%nat))( 6%nat)): Prop) .
Lemma natural_bittest20 :( ( beq_nat (naturalAsr( 27%nat :  nat )( 3%nat))( 3%nat)): Prop) .



Lemma nat_bittest1  :( ( beq_nat (natLand( 6%nat :  nat )( 5%nat))( 4%nat)): Prop) .
Lemma nat_bittest2  :( ( beq_nat (natLor( 6%nat :  nat )( 5%nat))( 7%nat)): Prop) .
Lemma nat_bittest3  :( ( beq_nat (natLxor( 6%nat :  nat )( 5%nat))( 3%nat)): Prop) .
Lemma nat_bittest4  :( ( beq_nat (natLand( 12%nat :  nat )( 9%nat))( 8%nat)): Prop) .
Lemma nat_bittest5  :( ( beq_nat (natLor( 12%nat :  nat )( 9%nat))( 13%nat)): Prop) .
Lemma nat_bittest6  :( ( beq_nat (natLxor( 12%nat :  nat )( 9%nat))( 5%nat)): Prop) .

Lemma nat_bittest9  :( ( beq_nat (natLsl( 27%nat :  nat )( 0%nat))( 27%nat)): Prop) .
Lemma nat_bittest10 :( ( beq_nat (natLsl( 27%nat :  nat )( 1%nat))( 54%nat)): Prop) .
Lemma nat_bittest11 :( ( beq_nat (natLsl( 27%nat :  nat )( 2%nat))( 108%nat)): Prop) .
Lemma nat_bittest12 :( (  beq_nat (natLsl( 27%nat :  nat )( 3%nat))( 216%nat)): Prop) .
Lemma nat_bittest17 :( ( beq_nat (natAsr( 27%nat :  nat )( 0%nat))( 27%nat)): Prop) .
Lemma nat_bittest18 :( ( beq_nat (natAsr( 27%nat :  nat )( 1%nat))( 13%nat)): Prop) .
Lemma nat_bittest19 :( ( beq_nat (natAsr( 27%nat :  nat )( 2%nat))( 6%nat)): Prop) .
Lemma nat_bittest20 :( ( beq_nat (natAsr( 27%nat :  nat )( 3%nat))( 3%nat)): Prop) .

