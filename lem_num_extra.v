(* Generated by Lem from num_extra.lem. *)

Require Import Arith.
Require Import Bool.
Require Import List.
Require Import String.
Require Import Program.Wf.

Require Import coqharness.

Open Scope nat_scope.
Open Scope string_scope.

(* **************************************************** *)
(*                                                      *)
(* A library of additional functions on numbers         *)
(*                                                      *)
(* **************************************************** *)

Require Import lem_basic_classes.
Require Export lem_basic_classes.

Require Import lem_num.
Require Export lem_num.

Require Import lem_string.
Require Export lem_string.

Require Import lem_assert_extra.
Require Export lem_assert_extra.



(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)


Definition integerOfChar   : ascii  -> Z :=  
  fun (x : ascii ) =>
    match (x) with | 0 => (Z.pred (Z.pos (P_of_succ_nat 0%nat))) | 1 =>
      (Z.pred (Z.pos (P_of_succ_nat 1%nat))) | 2 =>
      (Z.pred (Z.pos (P_of_succ_nat 2%nat))) | 3 =>
      (Z.pred (Z.pos (P_of_succ_nat 3%nat))) | 4 =>
      (Z.pred (Z.pos (P_of_succ_nat 4%nat))) | 5 =>
      (Z.pred (Z.pos (P_of_succ_nat 5%nat))) | 6 =>
      (Z.pred (Z.pos (P_of_succ_nat 6%nat))) | 7 =>
      (Z.pred (Z.pos (P_of_succ_nat 7%nat))) | 8 =>
      (Z.pred (Z.pos (P_of_succ_nat 8%nat))) | 9 =>
      (Z.pred (Z.pos (P_of_succ_nat 9%nat))) | _ => DAEMON end.
(* [?]: removed value specification. *)


Program Fixpoint integerOfStringHelper  (s : list (ascii ))  : Z :=  match ( s) with 
  | d :: ds => Coq.ZArith.BinInt.Z.add (integerOfChar d) ( Coq.ZArith.BinInt.Z.mul((Z.pred (Z.pos (P_of_succ_nat 10%nat)))) (integerOfStringHelper ds))
  | [] =>(Z.pred (Z.pos (P_of_succ_nat 0%nat)))
end.

Definition integerOfString  (s : string )  : Z :=  match ( string_to_char_list s) with 
  | - :: ds => (Coq.ZArith.BinInt.Z.sub Z0 (integerOfStringHelper (List.rev ds)))
  | ds => integerOfStringHelper (List.rev ds)
end.
(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

